# Project configuration
cmake_minimum_required(VERSION 3.20)  # global cmake version for targets
project(fmt_vcpkg)

# global settings
## Output directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# Project wide options
option(USE_FMT_HEADER_ONLY "Use fmt as header-only" ON)

# Compiler settings
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# target sources
set(SOURCE_FILES src/main.cpp)
set(PROJECT_TARGET main)

# Target Declarations
add_executable(${PROJECT_TARGET} ${SOURCE_FILES})
target_compile_features(${PROJECT_TARGET} PRIVATE cxx_std_20)   # this target specifically requires C++20

# Target configuration - dependency declarations and linking
find_package(fmt CONFIG REQUIRED)  # what is being linked and using configuration vs modular setup 

#############################################################
# if You Were Using Legacy Packages or Manual Includes      #
#   include_directories(${SOME_LIB_INCLUDE_DIR})            #
#############################################################

if(USE_FMT_HEADER_ONLY)
    target_link_libraries(${PROJECT_TARGET} PRIVATE fmt::fmt-header-only)
else()
    target_link_libraries(${PROJECT_TARGET} PRIVATE fmt::fmt)
endif()
